{
    "viewStorageType": {
        "description": "The storage type for this conceptual row in the viewTable.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.5", 
        "nodetype": "column", 
        "name": "viewStorageType", 
        "class": ""
    }, 
    "partyTable": {
        "description": "The SNMPv2 Party database.", 
        "oid": "1.3.6.1.6.3.3.2.1.1", 
        "nodetype": "table", 
        "name": "partyTable", 
        "class": ""
    }, 
    "aclStatus": {
        "description": "The status of this conceptual row in the aclTable.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.6", 
        "nodetype": "column", 
        "name": "aclStatus", 
        "class": ""
    }, 
    "partyCloneFrom": {
        "description": "The identity of a party to clone authentication and privacy parameters from. When read, the value { 0 0 } is returned. This value must be written exactly once, when the associated instance of partyStatus either does not exist or has the value `notReady. When written, the value identifies a party, the cloning party, whose status column has the value `active. The cloning party is used in two ways. One, if instances of the following objects do not exist for the party being created, then they are created with values identical to those of the corresponding objects for the cloning party: partyAuthProtocol partyAuthPublic partyAuthLifetime partyPrivProtocol partyPrivPublic Two, instances of the following objects are updated using the corresponding values of the cloning party: partyAuthPrivate partyPrivPrivate (e.g., the value of the cloning partys instance of the partyAuthPrivate object is XORd with the value of the partyAuthPrivate instances of the party being created.)", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.15", 
        "nodetype": "column", 
        "name": "partyCloneFrom", 
        "class": ""
    }, 
    "partyAuthPublic": {
        "description": "A publically-readable value for the party. Depending on the partys authentication protocol, this value may be needed to support the partys authentication protocol. Alternatively, it may be used by a manager during the procedure for altering secret information about a party. (For example, by altering the value of an instance of this object in the same SNMPv2 Set-Request used to update an instance of partyAuthPrivate, a subsequent Get-Request can determine if the Set- Request was successful in the event that no response to the Set-Request is received, see [4].) The length of the value is dependent on the partys authentication protocol. If not used by the authentication protocol, it is recommended that agents support values of any length up to and including the length of the corresponding partyAuthPrivate object.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.10", 
        "nodetype": "column", 
        "name": "partyAuthPublic", 
        "class": ""
    }, 
    "partyTDomain": {
        "description": "Indicates the kind of transport service by which the party receives network management traffic.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.3", 
        "nodetype": "column", 
        "name": "partyTDomain", 
        "class": ""
    }, 
    "imports": {
        "SNMPv2-CONF": [], 
        "SNMPv2-SMI": [], 
        "SNMPv2-TC": [], 
        "class": "imports"
    }, 
    "partyIndex": {
        "description": "A unique value for each SNMPv2 party. The value for each SNMPv2 party must remain constant at least from one re-initialization of the entitys network management system to the next re- initialization.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.2", 
        "nodetype": "column", 
        "name": "partyIndex", 
        "class": ""
    }, 
    "partyMaxMessageSize": {
        "description": "The maximum length in octets of a SNMPv2 message which this party will accept. For parties which execute at an agent, the agent initializes this object to the maximum length supported by the agent, and does not let the object be set to any larger value. For parties which do not execute at the agent, the agent must allow the manager to set this object to any legal value, even if it is larger than the agent can generate.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.5", 
        "nodetype": "column", 
        "name": "partyMaxMessageSize", 
        "class": ""
    }, 
    "partyPrivPrivate": {
        "description": "An encoding of the partys private encryption key which may be needed to support the privacy protocol. Although the value of this variable may be altered by a management operation (e.g., a SNMPv2 Set-Request), its value can never be retrieved by a management operation: when read, the value of this variable is the zero length OCTET STRING. The private encryption key is NOT directly represented by the value of this variable, but rather it is represented according to an encoding. This encoding is the bitwise exclusive-OR of the old key with the new key, i.e., of the old private encryption key (prior to the alteration) with the new private encryption key (after the alteration). Thus, when processing a received protocol Set operation, the new private encryption key is obtained from the value of this variable as the result of a bitwise exclusive-OR of the variables value and the old private encryption key. In calculating the exclusive-OR, if the old key is shorter than the new key, zero-valued padding is appended to the old key. If no value for the old key exists, a zero-length OCTET STRING is used in the calculation.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.13", 
        "nodetype": "column", 
        "name": "partyPrivPrivate", 
        "class": ""
    }, 
    "aclEntry": {
        "description": "The access privileges for a particular subject SNMPv2 party when asking a particular target SNMPv2 party to access a particular SNMPv2 context.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1", 
        "nodetype": "row", 
        "name": "aclEntry", 
        "class": ""
    }, 
    "meta": {
        "module": "SNMPv2-PARTY-MIB", 
        "comments": []
    }, 
    "snmpContexts": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.2.2", 
        "nodetype": "", 
        "name": "snmpContexts", 
        "class": ""
    }, 
    "temporalDomains": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.2", 
        "nodetype": "", 
        "name": "temporalDomains", 
        "class": ""
    }, 
    "restartTime": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.2.2", 
        "nodetype": "", 
        "name": "restartTime", 
        "class": ""
    }, 
    "contextLocal": {
        "description": "An indication of whether this context is realized by this SNMPv2 entity.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.3", 
        "nodetype": "column", 
        "name": "contextLocal", 
        "class": ""
    }, 
    "viewTable": {
        "description": "Locally held information about the MIB views known to this SNMPv2 entity. Each SNMPv2 context which is locally accessible has a single MIB view which is defined by two collections of view subtrees: the included view subtrees, and the excluded view subtrees. Every such subtree, both included and excluded, is defined in this table. To determine if a particular object instance is in a particular MIB view, compare the object instances OBJECT IDENTIFIER with each of the MIB views entries in this table. If none match, then the object instance is not in the MIB view. If one or more match, then the object instance is included in, or excluded from, the MIB view according to the value of viewType in the entry whose value of viewSubtree has the most sub- identifiers. If multiple entries match and have the same number of sub-identifiers, then the lexicographically greatest instance of viewType determines the inclusion or exclusion. An object instances OBJECT IDENTIFIER X matches an entry in this table when the number of sub- identifiers in X is at least as many as in the value of viewSubtree for the entry, and each sub- identifier in the value of viewSubtree matches its corresponding sub-identifier in X. Two sub- identifiers match either if the corresponding bit of viewMask is zero (the wild card value), or if they are equal. Due to this wild card capability, we introduce the term, a family of view subtrees, to refer to the set of subtrees defined by a particular combination of values of viewSubtree and viewMask. In the case where no wild card is defined in viewMask, the family of view subtrees reduces to a single view subtree.", 
        "oid": "1.3.6.1.6.3.3.2.4.1", 
        "nodetype": "table", 
        "name": "viewTable", 
        "class": ""
    }, 
    "contextProxySrcParty": {
        "description": "If the value of the corresponding instance of the contextViewIndex is equal to zero, then the value of an instance of this object identifies a SNMPv2 party which is the proxy source of a proxy relationship. Interpretation of an instance of this object depends upon the value of the transport domain associated with the SNMPv2 party used as the proxy destination in this proxy relationship. If the value of the corresponding instance of the contextViewIndex is greater than zero, then the value of an instance of this object is { 0 0 }.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.8", 
        "nodetype": "column", 
        "name": "contextProxySrcParty", 
        "class": ""
    }, 
    "aclTable": {
        "description": "The access privileges database.", 
        "oid": "1.3.6.1.6.3.3.2.3.1", 
        "nodetype": "table", 
        "name": "aclTable", 
        "class": ""
    }, 
    "viewIndex": {
        "description": "A unique value for each MIB view. The value for each MIB view must remain constant at least from one re-initialization of the entitys network management system to the next re-initialization.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.1", 
        "nodetype": "column", 
        "name": "viewIndex", 
        "class": ""
    }, 
    "v2md5AuthProtocol": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.1.4", 
        "nodetype": "", 
        "name": "v2md5AuthProtocol", 
        "class": ""
    }, 
    "viewMask": {
        "description": "The bit mask which, in combination with the corresponding instance of viewSubtree, defines a family of view subtrees. Each bit of this bit mask corresponds to a sub- identifier of viewSubtree, with the most significant bit of the i-th octet of this octet string value (extended if necessary, see below) corresponding to the (8*i - 7)-th sub-identifier, and the least significant bit of the i-th octet of this octet string corresponding to the (8*i)-th sub-identifier, where i is in the range 1 through 16. Each bit of this bit mask specifies whether or not the corresponding sub-identifiers must match when determining if an OBJECT IDENTIFIER is in this family of view subtrees; a 1 indicates that an exact match must occur; a 0 indicates wild card, i.e., any sub-identifier value matches. Thus, the OBJECT IDENTIFIER X of an object instance is contained in a family of view subtrees if the following criteria are met: for each sub-identifier of the value of viewSubtree, either: the i-th bit of viewMask is 0, or the i-th sub-identifier of X is equal to the i-th sub-identifier of the value of viewSubtree. If the value of this bit mask is M bits long and there are more than M sub-identifiers in the corresponding instance of viewSubtree, then the bit mask is extended with 1s to be the required length. Note that when the value of this object is the zero-length string, this extension rule results in a mask of all-1s being used (i.e., no wild card), and the family of view subtrees is the one view subtree uniquely identified by the corresponding instance of viewSubtree.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.3", 
        "nodetype": "column", 
        "name": "viewMask", 
        "class": ""
    }, 
    "cacheTime": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.2.3", 
        "nodetype": "", 
        "name": "cacheTime", 
        "class": ""
    }, 
    "viewStatus": {
        "description": "The status of this conceptual row in the viewTable.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.6", 
        "nodetype": "column", 
        "name": "viewStatus", 
        "class": ""
    }, 
    "desPrivProtocol": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.1.3", 
        "nodetype": "", 
        "name": "desPrivProtocol", 
        "class": ""
    }, 
    "noAuth": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.1.1", 
        "nodetype": "", 
        "name": "noAuth", 
        "class": ""
    }, 
    "aclResources": {
        "description": "The value of an instance of this object identifies a SNMPv2 context in an access control policy, and has the same value as the instance of the contextIndex object for that SNMPv2 context.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.3", 
        "nodetype": "column", 
        "name": "aclResources", 
        "class": ""
    }, 
    "partyMIBConformance": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.3", 
        "nodetype": "", 
        "name": "partyMIBConformance", 
        "class": ""
    }, 
    "aclPrivileges": {
        "description": "The access privileges which govern what management operations a particular target party may perform with respect to a particular SNMPv2 context when requested by a particular subject party. These privileges are specified as a sum of values, where each value specifies a SNMPv2 PDU type by which the subject party may request a permitted operation. The value for a particular PDU type is computed as 2 raised to the value of the ASN.1 context-specific tag for the appropriate SNMPv2 PDU type. The values (for the tags defined in [5]) are defined in [3] as: Get : 1 GetNext : 2 Response : 4 Set : 8 unused : 16 GetBulk : 32 Inform : 64 SNMPv2-Trap : 128 The null set is represented by the value zero.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.4", 
        "nodetype": "column", 
        "name": "aclPrivileges", 
        "class": ""
    }, 
    "noPriv": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.1.2", 
        "nodetype": "", 
        "name": "noPriv", 
        "class": ""
    }, 
    "contextStatus": {
        "description": "The status of this conceptual row in the contextTable. A context is not qualified for activation until instances of all corresponding columns have the appropriate value. In particular, if the contexts contextViewIndex is greater than zero, then the viewStatus column of the associated conceptual row(s) in the viewTable must have the value `active. Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the contextStatus column is `notReady.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.11", 
        "nodetype": "column", 
        "name": "contextStatus", 
        "class": ""
    }, 
    "partyPrivProtocol": {
        "description": "The privacy protocol by which all protocol messages received by the party are protected from disclosure. The value noPriv signifies that messages received by the party are not protected. Once an instance of this object is created, its value can not be changed.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.12", 
        "nodetype": "column", 
        "name": "partyPrivProtocol", 
        "class": ""
    }, 
    "partyAuthProtocol": {
        "description": "The authentication protocol by which all messages generated by the party are authenticated as to origin and integrity. The value noAuth signifies that messages generated by the party are not authenticated. Once an instance of this object is created, its value can not be changed.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.7", 
        "nodetype": "column", 
        "name": "partyAuthProtocol", 
        "class": ""
    }, 
    "partyEntry": {
        "description": "Locally held information about a particular SNMPv2 party.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1", 
        "nodetype": "row", 
        "name": "partyEntry", 
        "class": ""
    }, 
    "partyIdentity": {
        "description": "A party identifier uniquely identifying a particular SNMPv2 party.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.1", 
        "nodetype": "column", 
        "name": "partyIdentity", 
        "class": ""
    }, 
    "partyStorageType": {
        "description": "The storage type for this conceptual row in the partyTable.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.16", 
        "nodetype": "column", 
        "name": "partyStorageType", 
        "class": ""
    }, 
    "contextLocalTime": {
        "description": "If the value of the corresponding instance of the contextViewIndex is greater than zero, then the value of an instance of this object identifies the temporal context of the management information in the MIB view.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.6", 
        "nodetype": "column", 
        "name": "contextLocalTime", 
        "class": ""
    }, 
    "viewEntry": {
        "description": "Information on a particular family of view subtrees included in or excluded from a particular SNMPv2 contexts MIB view. Implementations must not restrict the number of families of view subtrees for a given MIB view, except as dictated by resource constraints on the overall number of entries in the viewTable.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1", 
        "nodetype": "row", 
        "name": "viewEntry", 
        "class": ""
    }, 
    "partyAuthLifetime": {
        "description": "The lifetime (in units of seconds) which represents an administrative upper bound on acceptable delivery delay for protocol messages generated by the party. Once an instance of this object is created, its value can not be changed.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.11", 
        "nodetype": "column", 
        "name": "partyAuthLifetime", 
        "class": ""
    }, 
    "partyAuthPrivate": {
        "description": "An encoding of the partys private authentication key which may be needed to support the authentication protocol. Although the value of this variable may be altered by a management operation (e.g., a SNMPv2 Set-Request), its value can never be retrieved by a management operation: when read, the value of this variable is the zero length OCTET STRING. The private authentication key is NOT directly represented by the value of this variable, but rather it is represented according to an encoding. This encoding is the bitwise exclusive-OR of the old key with the new key, i.e., of the old private authentication key (prior to the alteration) with the new private authentication key (after the alteration). Thus, when processing a received protocol Set operation, the new private authentication key is obtained from the value of this variable as the result of a bitwise exclusive-OR of the variables value and the old private authentication key. In calculating the exclusive-OR, if the old key is shorter than the new key, zero-valued padding is appended to the old key. If no value for the old key exists, a zero-length OCTET STRING is used in the calculation.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.9", 
        "nodetype": "column", 
        "name": "partyAuthPrivate", 
        "class": ""
    }, 
    "partyMIBCompliances": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.3.1", 
        "nodetype": "", 
        "name": "partyMIBCompliances", 
        "class": ""
    }, 
    "partyProtocols": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.1", 
        "nodetype": "", 
        "name": "partyProtocols", 
        "class": ""
    }, 
    "aclSubject": {
        "description": "The value of an instance of this object identifies a SNMPv2 party which is the subject of an access control policy, and has the same value as the instance of the partyIndex object for that SNMPv2 party.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.2", 
        "nodetype": "column", 
        "name": "aclSubject", 
        "class": ""
    }, 
    "contextIndex": {
        "description": "A unique value for each SNMPv2 context. The value for each SNMPv2 context must remain constant at least from one re-initialization of the entitys network management system to the next re-initialization.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.2", 
        "nodetype": "column", 
        "name": "contextIndex", 
        "class": ""
    }, 
    "contextIdentity": {
        "description": "A context identifier uniquely identifying a particular SNMPv2 context.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.1", 
        "nodetype": "column", 
        "name": "contextIdentity", 
        "class": ""
    }, 
    "snmpParties": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.2.1", 
        "nodetype": "", 
        "name": "snmpParties", 
        "class": ""
    }, 
    "partyMIBObjects": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.2", 
        "nodetype": "", 
        "name": "partyMIBObjects", 
        "class": ""
    }, 
    "partyTAddress": {
        "description": "The transport service address by which the party receives network management traffic, formatted according to the corresponding value of partyTDomain. For snmpUDPDomain, partyTAddress is formatted as a 4-octet IP Address concatenated with a 2-octet UDP port number.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.4", 
        "nodetype": "column", 
        "name": "partyTAddress", 
        "class": ""
    }, 
    "contextViewIndex": {
        "description": "If the value of an instance of this object is zero, then this corresponding conceptual row in the contextTable refers to a SNMPv2 context which identifies a proxy relationship; the values of the corresponding instances of the contextProxyDstParty, contextProxySrcParty, and contextProxyContext objects provide further information on the proxy relationship. Otherwise, if the value of an instance of this object is greater than zero, then this corresponding conceptual row in the contextTable refers to a SNMPv2 context which identifies a MIB view of a locally accessible entity; the value of the instance identifies the particular MIB view which has the same value of viewIndex; and the value of the corresponding instances of the contextLocalEntity and contextLocalTime objects provide further information on the local entity and its temporal domain.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.4", 
        "nodetype": "column", 
        "name": "contextViewIndex", 
        "class": ""
    }, 
    "partyMIBGroups": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.3.2", 
        "nodetype": "", 
        "name": "partyMIBGroups", 
        "class": ""
    }, 
    "aclTarget": {
        "description": "The value of an instance of this object identifies a SNMPv2 party which is the target of an access control policy, and has the same value as the instance of the partyIndex object for that party.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.1", 
        "nodetype": "column", 
        "name": "aclTarget", 
        "class": ""
    }, 
    "currentTime": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.2.1", 
        "nodetype": "", 
        "name": "currentTime", 
        "class": ""
    }, 
    "aclStorageType": {
        "description": "The storage type for this conceptual row in the aclTable.", 
        "oid": "1.3.6.1.6.3.3.2.3.1.1.5", 
        "nodetype": "column", 
        "name": "aclStorageType", 
        "class": ""
    }, 
    "contextLocalEntity": {
        "description": "If the value of the corresponding instance of the contextViewIndex is greater than zero, then the value of an instance of this object identifies the local entity whose management information is in the SNMPv2 contexts MIB view. The empty string indicates that the MIB view contains the SNMPv2 entitys own local management information; otherwise, a non-empty string indicates that the MIB view contains management information of some other local entity, e.g., Repeater1.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.5", 
        "nodetype": "column", 
        "name": "contextLocalEntity", 
        "class": ""
    }, 
    "contextTable": {
        "description": "The SNMPv2 Context database.", 
        "oid": "1.3.6.1.6.3.3.2.2.1", 
        "nodetype": "table", 
        "name": "contextTable", 
        "class": ""
    }, 
    "partyMIB": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3", 
        "nodetype": "", 
        "name": "partyMIB", 
        "class": ""
    }, 
    "partyLocal": {
        "description": "An indication of whether this party executes at this SNMPv2 entity. If this object has a value of true(1), then the SNMPv2 entity will listen for SNMPv2 messages on the partyTAddress associated with this party. If this object has the value false(2), then the SNMPv2 entity will not listen for SNMPv2 messages on the partyTAddress associated with this party.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.6", 
        "nodetype": "column", 
        "name": "partyLocal", 
        "class": ""
    }, 
    "snmpAccess": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.2.3", 
        "nodetype": "", 
        "name": "snmpAccess", 
        "class": ""
    }, 
    "partyStatus": {
        "description": "The status of this conceptual row in the partyTable. A party is not qualified for activation until instances of all columns of its partyEntry row have an appropriate value. In particular: A value must be written to the Partys partyCloneFrom object. If the Partys partyAuthProtocol object has the value md5AuthProtocol, then the corresponding instance of partyAuthPrivate must contain a secret of the appropriate length. Further, at least one management protocol set operation updating the value of the partys partyAuthPrivate object must be successfully processed, before the partyAuthPrivate column is considered appropriately configured. If the Partys partyPrivProtocol object has the value desPrivProtocol, then the corresponding instance of partyPrivPrivate must contain a secret of the appropriate length. Further, at least one management protocol set operation updating the value of the partys partyPrivPrivate object must be successfully processed, before the partyPrivPrivate column is considered appropriately configured. Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the partyStatus column is `notReady.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.17", 
        "nodetype": "column", 
        "name": "partyStatus", 
        "class": ""
    }, 
    "partyAuthClock": {
        "description": "The authentication clock which represents the local notion of the current time specific to the party. This value must not be decremented unless the partys private authentication key is changed simultaneously.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.8", 
        "nodetype": "column", 
        "name": "partyAuthClock", 
        "class": ""
    }, 
    "partyAdmin": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1", 
        "nodetype": "", 
        "name": "partyAdmin", 
        "class": ""
    }, 
    "snmpViews": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.2.4", 
        "nodetype": "", 
        "name": "snmpViews", 
        "class": ""
    }, 
    "initialContextId": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.4", 
        "nodetype": "", 
        "name": "initialContextId", 
        "class": ""
    }, 
    "partyPrivPublic": {
        "description": "A publically-readable value for the party. Depending on the partys privacy protocol, this value may be needed to support the partys privacy protocol. Alternatively, it may be used by a manager as a part of its procedure for altering secret information about a party. (For example, by altering the value of an instance of this object in the same SNMPv2 Set-Request used to update an instance of partyPrivPrivate, a subsequent Get-Request can determine if the Set- Request was successful in the event that no response to the Set-Request is received, see [4].) The length of the value is dependent on the partys privacy protocol. If not used by the privacy protocol, it is recommended that agents support values of any length up to and including the length of the corresponding partyPrivPrivate object.", 
        "oid": "1.3.6.1.6.3.3.2.1.1.1.14", 
        "nodetype": "column", 
        "name": "partyPrivPublic", 
        "class": ""
    }, 
    "viewSubtree": {
        "description": "A MIB subtree.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.2", 
        "nodetype": "column", 
        "name": "viewSubtree", 
        "class": ""
    }, 
    "initialPartyId": {
        "description": "", 
        "oid": "1.3.6.1.6.3.3.1.3", 
        "nodetype": "", 
        "name": "initialPartyId", 
        "class": ""
    }, 
    "contextStorageType": {
        "description": "The storage type for this conceptual row in the contextTable.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.10", 
        "nodetype": "column", 
        "name": "contextStorageType", 
        "class": ""
    }, 
    "viewType": {
        "description": "The status of a particular family of view subtrees within the particular SNMPv2 contexts MIB view. The value included(1) indicates that the corresponding instances of viewSubtree and viewMask define a family of view subtrees included in the MIB view. The value excluded(2) indicates that the corresponding instances of viewSubtree and viewMask define a family of view subtrees excluded from the MIB view.", 
        "oid": "1.3.6.1.6.3.3.2.4.1.1.4", 
        "nodetype": "column", 
        "name": "viewType", 
        "class": ""
    }, 
    "contextProxyDstParty": {
        "description": "If the value of the corresponding instance of the contextViewIndex is equal to zero, then the value of an instance of this object identifies a SNMPv2 party which is the proxy destination of a proxy relationship. If the value of the corresponding instance of the contextViewIndex is greater than zero, then the value of an instance of this object is { 0 0 }.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.7", 
        "nodetype": "column", 
        "name": "contextProxyDstParty", 
        "class": ""
    }, 
    "contextEntry": {
        "description": "Locally held information about a particular SNMPv2 context.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1", 
        "nodetype": "row", 
        "name": "contextEntry", 
        "class": ""
    }, 
    "contextProxyContext": {
        "description": "If the value of the corresponding instance of the contextViewIndex is equal to zero, then the value of an instance of this object identifies the context of a proxy relationship. Interpretation of an instance of this object depends upon the value of the transport domain associated with the SNMPv2 party used as the proxy destination in this proxy relationship. If the value of the corresponding instance of the contextViewIndex is greater than zero, then the value of an instance of this object is { 0 0 }.", 
        "oid": "1.3.6.1.6.3.3.2.2.1.1.9", 
        "nodetype": "column", 
        "name": "contextProxyContext", 
        "class": ""
    }
}